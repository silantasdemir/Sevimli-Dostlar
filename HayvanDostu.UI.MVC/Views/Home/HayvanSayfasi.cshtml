@model HayvanDostu.Model.Hayvan



@{
    ViewBag.Title = "HayvanSayfasi";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}



@using (Html.BeginForm("HayvanSayfasi", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h2>Hayvan Profil Oluşturma</h2>
        <div class="form-horizontal col-lg-12" style=" margin-top:40px;">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.DropDownListFor(a => a.HayvanCinsiID, (IEnumerable<SelectListItem>)ViewBag.Cinsler, new { @class = "form-control" })
            </div>


            @*<div class="form-group">
                    @Html.LabelFor(model => model.Item2.Cinsi, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Item1.HayvanCinsi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item1.HayvanCinsi, "", new { @class = "text-danger" })
                    </div>
                </div>*@



            <div class="form-group">
                @Html.LabelFor(model => model.Ad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DogumTarihi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DogumTarihi, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.DogumTarihi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cinsiyet, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="container row">
                    <div class="col-md-1">
                        <div class="radio">
                            <label>Erkek</label>
                            @Html.RadioButtonFor(m => m.Cinsiyet, "true")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="radio">
                            <label>Dişi</label>
                            @Html.RadioButtonFor(m => m.Cinsiyet, "false")
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hikayesi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hikayesi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hikayesi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FotoUrl1, "Fotoğraf Ekle", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input id="FotoUrl" type="file" name="file" required" />

                    @Html.ValidationMessageFor(model => model.FotoUrl1, "", new { @class = "text-danger" })

                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Oluştur" class="btn btn-default" />
                </div>
            </div>
        </div>

    </div>
}
<div>
    @if (ViewBag.Error != null)
    {
        <span class="alert-danger">
            Kayıt işlemi başarısız
        </span>
    }
</div>
